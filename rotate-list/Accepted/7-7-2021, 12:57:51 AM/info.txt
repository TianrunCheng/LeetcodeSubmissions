{"id":518595376,"lang":"python3","time":"2Â weeks","timestamp":1625633871,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/518595376/","is_pending":"Not Pending","title":"Rotate List","memory":"14.2 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def rotateRight(self, head: ListNode, k: int) -> ListNode:\n        if not head:\n            return head\n        \n        size = 1\n        curr = head\n        while curr.next:\n            size += 1\n            curr = curr.next\n        # curr -> none \n        # curr is the tail now\n        tail = curr\n        tail.next = head\n        \n        k = k % size\n        for _ in range(size - k):\n            tail = tail.next\n            head = head.next\n        tail.next = None\n        return head","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotate-list"}