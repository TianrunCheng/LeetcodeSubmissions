{"id":512667705,"lang":"python3","time":"3 weeks, 6 days","timestamp":1624558746,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/512667705/","is_pending":"Not Pending","title":"Third Maximum Number","memory":"N/A","code":"class Solution:\n    def thirdMax(self, nums: List[int]) -> int:\n#       # this code repeats itself, could be written into a function\n#         maximum = nums[0]\n#         for k in nums:\n#             if k > maximum:\n#                 maximum = k\n        \n#         second = 0\n#         flag = True\n#         # flag: have we found at least one second-largest yet?\n#         # flag = True : value of second un-set\n#         for k in nums:\n#             if k != maximum:\n#                 if flag:\n#                     second = k\n#                     flag = False\n#                 else:\n#                     second = max(second, k)\n        \n#         if flag:\n#             return maximum\n        \n#         third = 0\n#         flag = True\n#         # flag is True when the value of \"third\" is unset\n#         for k in nums:\n#             if k != maximum and k != second:\n#                 if flag:\n#                     third = k\n#                     flag = False\n#                 else:\n#                     third = max(third, k)\n#         if flag:\n#             return maximum\n        \n#         return third\n\n\n#         # my solution re-written as function\n#         def findMaximumIgnoreNums(nums, seenMaximums):\n#             maximum = None\n#             for k in nums:\n#                 if k not in seenMaximums:\n#                     if maximum == None or maximum < k:\n#                         maximum = k\n#             return maximum\n        \n#         seen = set()\n        \n#         for _ in range(3):\n#             current_maximum = findMaximumIgnoreNums(nums, seen)\n#             if current_maximum == None:\n#                 return max(seen)\n#             seen.add(current_maximum)\n        \n#         return min(seen)\n\n#         # keep the found maximums in a set as we do only one traversal\n#         maximums = set()\n        \n#         for k in nums:\n#             maximums.add(k)\n#             if len(maximums) > 3:\n#                 maximums.remove(min(maximums))\n        \n#         if len(maximums) == 3:\n#             return min(maximums)\n#         return max(maximums)\n\n\n\n        # Qi's genius answer\n        triplet = [float(\"-inf\")]*3\n        for x in nums:\n            triplet.append(x)\n            triplet.sort(reverse = True)\n            triplet.pop()\n            print(triplet)\n        if triplet[2] == float(\"-inf\"):\n            return triplet[0]\n        else:\n            return triplet[2]\n        \n        \n        \n        ","compare_result":"11000001110111111110000111110","title_slug":"third-maximum-number"}