{"id":295734352,"lang":"python3","time":"1Â year, 6Â months","timestamp":1579486715,"status_display":"Accepted","runtime":"132 ms","url":"/submissions/detail/295734352/","is_pending":"Not Pending","title":"Combination Sum II","memory":"12.8 MB","code":"class Solution:\n    def combinationSum2(self, candidates: List[int], target: int) -> List[List[int]]:\n        candidates.sort(reverse=True)\n        \n        \n        def fn(candi: List[int], target: int) -> List[List[int]]:\n            if target==0:\n                return [[]]\n            elif target < 0:\n                return None\n            elif len(candi) == 1:\n                if target == candi[0]: return [[candi[0]]]\n                else: return None\n            elif len(candi) > 1:\n                sub_ans1 = fn(candi[1:], target-candi[0])\n                sub_ans2 = fn(candi[1:], target)\n                if sub_ans1==None:\n                    return sub_ans2\n                else:\n                    for _ in sub_ans1:\n                        _.append(candi[0])\n                    if sub_ans2 == None:\n                        return sub_ans1\n                    else:\n                        for _ in sub_ans2:\n                            sub_ans1.append(_)\n                        return sub_ans1\n        \n        ans = fn(candidates, target)\n        \n        if ans == [[]] or ans == None:\n            return []\n        else:\n            i = 0\n            while (i < (len(ans)-1)):\n                j = i +1\n                while(j<len(ans)):\n                    if ans[j] == ans[i]:\n                        ans.pop(j)\n                    else:\n                        j = j + 1\n                i = i+1\n            return ans\n        \n                ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum-ii"}