{"id":514578123,"lang":"python3","time":"3Â weeks, 2Â days","timestamp":1624912575,"status_display":"Accepted","runtime":"1708 ms","url":"/submissions/detail/514578123/","is_pending":"Not Pending","title":"Min Stack","memory":"18 MB","code":"class MinStack:\n\n    def __init__(self):\n        \"\"\"\n        initialize your data structure here.\n        \"\"\"\n        self.__data = []\n        \n\n    def push(self, val: int) -> None:\n        self.__data.append(val)\n\n    def pop(self) -> None:\n        self.__data.pop()\n\n    def top(self) -> int:\n        return self.__data[-1]\n\n    def getMin(self) -> int:\n        res = self.__data[0]\n        for num in self.__data:\n            if num < res:\n                res = num\n        return res\n        \n\n\n# Your MinStack object will be instantiated and called as such:\n# obj = MinStack()\n# obj.push(val)\n# obj.pop()\n# param_3 = obj.top()\n# param_4 = obj.getMin()","compare_result":"1111111111111111111111111111111","title_slug":"min-stack"}