{"id":500077113,"lang":"python3","time":"1 month, 3 weeks","timestamp":1622327735,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/500077113/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"16.5 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def maxDepth(self, root: TreeNode) -> int:\n        \n#         # https://www.geeksforgeeks.org/global-keyword-in-python/\n#         # global variable in nested functions\n\n        global ans\n        ans = 0\n        \n        def topDown(node: TreeNode, depth: int):\n            global ans\n            if node == None:\n                return\n            if node.left == None and node.right == None:\n                if ans < depth:\n                    ans = depth\n                return\n            topDown(node.left, depth+1)\n            topDown(node.right, depth+1)\n        \n        topDown(root, 1)\n        \n        return ans\n\n\n\n\n\n\n\n#         def topDown(node: TreeNode, depth: int, ans: int) -> int:\n\n#             if node == None:\n#                 return ans\n#             if node.left == None and node.right == None:\n#                 if ans < depth:\n#                     ans = depth\n#                 return ans\n#             l_ans = topDown(node.left, depth + 1, ans)\n#             r_ans = topDown(node.right, depth + 1, ans)\n#             ans = max(ans, l_ans, r_ans)\n#             return ans\n        \n#         ans = topDown(root, 1, 0)\n        \n#         return ans\n\n","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree"}