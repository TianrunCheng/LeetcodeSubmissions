{"id":498687662,"lang":"python3","time":"1 month, 3 weeks","timestamp":1622058541,"status_display":"Accepted","runtime":"348 ms","url":"/submissions/detail/498687662/","is_pending":"Not Pending","title":"Find K Closest Elements","memory":"15.5 MB","code":"class Solution:\n    def findClosestElements(self, arr: List[int], k: int, x: int) -> List[int]:\n        res = []\n        \n        left = 0\n        right = len(arr) - 1\n        \n        while(left < right - 1):\n            mid = (left + right) // 2\n            if arr[mid] == x:\n                left = right = mid\n            elif arr[mid] < x:\n                if arr[mid+1] > x:\n                    left = mid\n                    right = mid+1\n                else:\n                    left = mid + 1\n            else:\n                if arr[mid-1] < x:\n                    left = mid-1\n                    right = mid\n                else:\n                    right = mid-1\n\n        \n        # [left, left+1, ..., right-1, right]\n        # left & right are the next elements to be added\n        for i in range(k):\n            if 0 <= left and right <= len(arr) - 1:\n                if (x - arr[left]) <= (arr[right] - x):\n                    res.insert(0, arr[left])\n                    if (left < right):\n                        left = left - 1\n                    else:\n                        left -= 1\n                        right += 1\n                else:\n                    res.append(arr[right])\n                    right = right + 1\n            elif left < 0:\n                res.append(arr[right])\n                right = right + 1\n            else:\n                res.insert(0, arr[left])\n                left = left - 1\n        \n        return res\n                ","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"find-k-closest-elements"}