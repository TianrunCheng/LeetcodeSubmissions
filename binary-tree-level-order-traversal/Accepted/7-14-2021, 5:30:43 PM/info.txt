{"id":522636289,"lang":"python3","time":"1Â week","timestamp":1626298243,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/522636289/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"14.7 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def levelOrder(self, root: TreeNode) -> List[List[int]]:\n        queue = []\n        res = []\n        \n        if root == None:\n            return []\n        \n        queue.append(root)\n        \n        while(len(queue) > 0):\n            n = len(queue)\n            line = []\n            for i in range(n):\n                node = queue.pop(0)\n                line.append(node.val)\n                if node.left != None:\n                    queue.append(node.left)\n                if node.right != None:\n                    queue.append(node.right)\n            res.append(line)\n        \n        return res\n        \n        \n            ","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal"}