{"id":499602450,"lang":"python3","time":"1 month, 3 weeks","timestamp":1622238627,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/499602450/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def levelOrder(self, root: TreeNode) -> List[List[int]]:\n        currlevel = []\n        res = []\n        \n        if root == None:\n            return [[]]\n        \n        currlevel.append(root)\n        \n        while(len(currlevel) > 0):\n            nextlevel = []\n            line = []\n            for node in currlevel:\n                line.append(node.val)\n                if node.left != None:\n                    nextlevel.append(node.left)\n                if node.right != None:\n                    nextlevel.append(node.right)\n            currlevel = nextlevel\n            res.append(line)\n        \n        return res\n        \n        \n            ","compare_result":"1101111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal"}