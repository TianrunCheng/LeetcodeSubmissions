{"id":510720088,"lang":"python3","time":"1Â month","timestamp":1624210177,"status_display":"Accepted","runtime":"92 ms","url":"/submissions/detail/510720088/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"21.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def maxPathSum(self, root: TreeNode) -> int:\n        global curr_max\n        curr_max = -1000\n        \n        def maxBranch(root: TreeNode) -> int:\n            global curr_max\n            # maxBranch returns the maximum branch val stemming from root\n            # including the root val\n            if root == None:\n                return 0\n            left = maxBranch(root.left)\n            right = maxBranch(root.right)\n            # compute the max path passing through root\n            curr = max(left+root.val, right+root.val, left+right+root.val, root.val)\n            if curr > curr_max:\n                curr_max = curr\n            return max(left+root.val, right+root.val, root.val)\n        \n        branch = maxBranch(root)\n        \n        return curr_max\n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-maximum-path-sum"}