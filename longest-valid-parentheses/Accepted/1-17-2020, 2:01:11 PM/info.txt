{"id":295072238,"lang":"python3","time":"1 year, 6 months","timestamp":1579287671,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/295072238/","is_pending":"Not Pending","title":"Longest Valid Parentheses","memory":"12.9 MB","code":"class Solution:\n    def longestValidParentheses(self, s: str) -> int:\n        # dynamic programming solution\n        # store the length of the longest valid parentheses ending by the current symbol\n        # if the current symbol is '(', simply put down -1, if the current symbol is ')', then:\n        # dp[i] = 2 + dp[i-2](>0) if dp[i-1] == -1\n        # dp[i] = 0 if dp[i-1] == 0\n        # dp[i] = dp[i-1] + 2 + dp[i-2-dp[i-1]](>0) if dp[i-1]>0 and dp[i-1-dp[i-1]] == -1\n        # dp[i] = 0 if dp[i-1]>0 and dp[i-1-dp[i-1]] == 0\n        \n        dp = [ 0 for i in range(len(s)+1)]\n        max_len = 0\n        \n        for i in range(1, len(s)+1):\n            if s[i-1] == '(':\n                dp[i] = -1\n            else:\n                if dp[i-1] == 0:\n                    dp[i] = 0\n                elif dp[i-1] == -1:\n                    if dp[i-2] > 0:\n                        dp[i] = 2 + dp[i-2]\n                        max_len = max(max_len, dp[i])\n                    else:\n                        dp[i] = 2\n                        max_len = max(max_len, dp[i])\n                elif dp[i-1] > 0:\n                    if dp[i-1-dp[i-1]] == 0:\n                        dp[i] = 0\n                    elif dp[i-1-dp[i-1]] == -1:\n                        if dp[i-2-dp[i-1]] > 0:\n                            dp[i] = dp[i-1] + 2 + dp[i-2-dp[i-1]]\n                            max_len = max(max_len, dp[i])\n                        else:\n                            dp[i] = dp[i-1] + 2\n                            max_len = max(max_len, dp[i])\n        \n        return max_len","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-valid-parentheses"}