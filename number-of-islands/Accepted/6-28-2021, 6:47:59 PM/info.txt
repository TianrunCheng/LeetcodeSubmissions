{"id":514615379,"lang":"python3","time":"3 weeks, 2 days","timestamp":1624920479,"status_display":"Accepted","runtime":"120 ms","url":"/submissions/detail/514615379/","is_pending":"Not Pending","title":"Number of Islands","memory":"15.6 MB","code":"\n\"\"\"\ntime complexity: #Islands * m * n\ngo through the grid, everytime discovering a land, delete the whole island connected to this land\n    via recursion, until the last time going through the grid, there is no land left on map\n\"\"\"\nclass Solution:  \n    def numIslands(self, grid: List[List[str]]) -> int:\n        def deleteIsland(x: int, y: int) -> bool:\n            if x < 0 or x >=m or y < 0 or y >= n:\n                return False\n            if grid[x][y] is not \"1\":\n                return False\n            grid[x][y] = \"0\"\n            if x > 0 and grid[x-1][y] is \"1\":\n                deleteIsland(x-1, y)\n            if x < (m-1) and grid[x+1][y] is \"1\":\n                deleteIsland(x+1, y)\n            if y > 0 and grid[x][y-1] is \"1\":\n                deleteIsland(x, y-1)\n            if y < n-1 and grid[x][y+1] is \"1\":\n                deleteIsland(x, y+1)\n            return True\n        \n        m = len(grid)\n        n = len(grid[0])\n        count = 0\n        \n        for i in range(m):\n            for j in range(n):\n                if grid[i][j] is \"1\":\n                    count += 1\n                    deleteIsland(i, j)\n        \n        return count\n    \n\n                    \n    \n","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"number-of-islands"}