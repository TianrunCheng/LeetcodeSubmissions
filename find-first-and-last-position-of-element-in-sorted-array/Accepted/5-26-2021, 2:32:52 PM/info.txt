{"id":498660485,"lang":"python3","time":"1 month, 3 weeks","timestamp":1622053972,"status_display":"Accepted","runtime":"84 ms","url":"/submissions/detail/498660485/","is_pending":"Not Pending","title":"Find First and Last Position of Element in Sorted Array","memory":"15.5 MB","code":"class Solution:\n    def searchRange(self, nums: List[int], target: int) -> List[int]:\n        \n        lower_bound = self.findBound(nums, target, True)\n        if (lower_bound == -1):\n            return [-1, -1]\n        \n        upper_bound = self.findBound(nums, target, False)\n        \n        return [lower_bound, upper_bound]\n        \n    def findBound(self, nums: List[int], target: int, isFirst: bool) -> int:\n        \n        N = len(nums)\n        begin, end = 0, N - 1\n        while begin <= end:\n            mid = int((begin + end) / 2)    \n            \n            if nums[mid] == target:\n                \n                if isFirst:\n                    # This means we found our lower bound.\n                    if nums[mid - 1] < target or mid == begin :\n                        return mid\n\n                    # Search on the left side for the bound.\n                    end = mid - 1\n                else:\n                    \n                    # This means we found our upper bound.\n                    if mid == end or nums[mid + 1] > target:\n                        return mid\n                    \n                    # Search on the right side for the bound.\n                    begin = mid + 1\n            \n            elif nums[mid] > target:\n                end = mid - 1\n            else:\n                begin = mid + 1\n        \n        return -1\n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-first-and-last-position-of-element-in-sorted-array"}