{"id":453089085,"lang":"python3","time":"5 months, 2 weeks","timestamp":1612678516,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/453089085/","is_pending":"Not Pending","title":"Wildcard Matching","memory":"N/A","code":"class Solution:\n    def isMatch(self, s: str, p: str) -> bool:\n        n = len(s)\n        m = len(p)\n        \n        match = [ False  ]* (n+1)\n        match[0] = True\n        \n        for j in range(m):\n            if p[j] is \"*\":\n                for i in range(n):\n                    if match[i]:\n                        match[i+1]\n            elif p[j] is \"?\":\n                trans = [ False ] * (n+1)\n                for i in range(n):\n                    if match[i]:\n                        trans[i+1] = True\n                match = trans\n            else:\n                trans = [ False  ]* (n+1)\n                for i in range(n):\n                    if match[i] and s[i] == p[j]:\n                        trans[i+1] = True\n                match = trans\n        \n        return match[-1]\n                        ","compare_resulttitle_slug":"wildcard-matching"}