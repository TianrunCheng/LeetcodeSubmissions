{"id":522743286,"lang":"python3","time":"6Â days, 23Â hours","timestamp":1626319533,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/522743286/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"14.6 MB","code":"class Solution:\n    def generateParenthesis(self, n: int) -> List[str]:\n        self.curr = []\n        self.count = 0\n        self.stack = []\n        res = []\n        \n        def backtrack(ind: int):\n            # print(self.curr)\n            # extend ind_th symbol in current string\n            if ind < 2 * n:\n                if self.stack:\n                    self.curr.append(')')\n                    self.stack.pop()\n                    backtrack(ind + 1)\n                    self.curr.pop()\n                    self.stack.append('(')\n                if self.count < n:\n                    self.curr.append('(')\n                    self.stack.append('(')\n                    self.count += 1\n                    backtrack(ind + 1)\n                    self.count -= 1\n                    self.curr.pop()\n                    self.stack.pop()\n            else:\n                res.append(\"\".join(self.curr))\n                return\n        \n        backtrack(0)\n        \n        return res","compare_result":"11111111","title_slug":"generate-parentheses"}