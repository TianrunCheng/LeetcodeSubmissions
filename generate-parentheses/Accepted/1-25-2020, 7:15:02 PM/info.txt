{"id":297389016,"lang":"python3","time":"1Â year, 5Â months","timestamp":1579997702,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/297389016/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"12.9 MB","code":"class Solution:\n    def generateParenthesis(self, n: int) -> List[str]:\n        \n        def fn(n: int) -> List[str]:\n            ans = []\n            if n == 1:\n                return [\"()\"]\n            else:\n                for i in range(n):\n                    if i > 0 and n-1-i > 0:\n                        sub_ans2 = fn(i)\n                        sub_ans1 = fn(n-1-i)\n                        for a in sub_ans1:\n                            for b in sub_ans2:\n                                ans.append('('+a+')'+b)\n                    elif i == 0:\n                        sub_ans = fn(n-1)\n                        for _ in sub_ans:\n                            ans.append('('+_+')')\n                    elif i == n-1:\n                        sub_ans = fn(n-1)\n                        for _ in sub_ans:\n                            ans.append('()'+_)\n                return ans\n                    \n        if n == 0:\n            return []\n        else:\n            return fn(n)","compare_result":"11111111","title_slug":"generate-parentheses"}