{"id":500991878,"lang":"python3","time":"1 month, 3 weeks","timestamp":1622488364,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/500991878/","is_pending":"Not Pending","title":"Count Univalue Subtrees","memory":"14.4 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def countUnivalSubtrees(self, root: TreeNode) -> int:\n        global res\n        res = 0\n        \n        if root == None:\n            return 0\n        \n        # num of unival subtree can come up with a post-order traversal of the tree\n        # leaf nodes are all unival subtrees\n        # if left.val == right.val == root.val root is also a unival subree\n        def postorder(root: TreeNode) -> bool:\n            global res\n            if root.left == None and root.right == None:\n                res += 1\n                return True\n            lflag = False\n            rflag = False\n            if root.left != None:\n                lflag = True\n                l = postorder(root.left)\n                lval = root.left.val\n            if root.right != None:\n                rflag = True\n                r = postorder(root.right)\n                rval = root.right.val\n            if lflag and rflag:\n                if l and r and lval == rval and lval == root.val:\n                    res += 1\n                    return True\n                else:\n                    return False\n            elif lflag:\n                if l and lval == root.val:\n                    res += 1\n                    return True\n                else:\n                    return False\n            else:\n                if r and rval == root.val:\n                    res += 1\n                    return True\n                else:\n                    return False\n        \n        postorder(root)\n        \n        return res\n\n                \n            \n            ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-univalue-subtrees"}