{"id":517945314,"lang":"python3","time":"2 weeks, 2 days","timestamp":1625523127,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/517945314/","is_pending":"Not Pending","title":"Remove Nth Node From End of List","memory":"N/A","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def removeNthFromEnd(self, head: ListNode, n: int) -> ListNode:\n        # --- plain two pass code: ---\n#         curr = head\n#         sz = 0\n#         while(curr != None):\n#             sz += 1\n#             curr = curr.next\n#         step = sz - n\n        \n#         if step is 0:\n#             return head.next\n        \n#         tar = head\n#         while(step>1):\n#             tar = tar.next\n#             step -= 1\n#         tar.next = tar.next.next\n#         return head\n        \n#         # store list in an array to find the one to delete next\n#         a = []\n#         curr = head\n#         while(curr != None):\n#             a.append(curr)\n#             curr = curr.next\n#         # print(a)\n        \n#         step = len(a) - n\n        \n#         if step is 0:\n#             return head.next\n        \n#         tar = a[step-1]\n#         # print(tar)\n#         tar.next = tar.next.next\n#         return head\n\n        # two pointer solution\n        hare = head\n        for _ in range(n):\n            hare = hare.next\n        \n        toi = head\n        while(hare.next != None):\n            toi = toi.next\n            hare = hare.next\n        \n        toi.next = toi.next.next\n        return head\n        \n        \n        ","compare_result":"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"remove-nth-node-from-end-of-list"}