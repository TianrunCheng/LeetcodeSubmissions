{"id":441765278,"lang":"python3","time":"6 months, 1 week","timestamp":1610404201,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/441765278/","is_pending":"Not Pending","title":"Container With Most Water","memory":"N/A","code":"class Solution:\n    def maxArea(self, height: List[int]) -> int:\n    \n        \n        # Brute Force: O(n^2) worst case\n        # Note: n -> 3 * 10^4, too large\n        \n        curr_max = 0\n        if len(height) < 2:\n            return 0\n        \n        for i in range(len(height)-1):\n            if height[i] is 0:\n                continue\n            if i>0 and height[i] <= height[i-1]:\n                continue\n            if (curr_max / height[i]) > (len(height)-1-i):\n                continue\n            else:\n                for k in range(len(height)-i):\n                    j = len(height)-k-1\n                    container = (j - i) * min(height[i], height[j])\n                    # print(container)\n                    if curr_max > container:\n                        pass\n                    else:\n                        curr_max = container\n                        \n                    if height[j] >= height[i]:\n                        break\n        \n        return curr_max\n\n\n","compare_result":"11111111111111111111111111111111111111111111111111111110","title_slug":"container-with-most-water"}