{"id":441775740,"lang":"python3","time":"6 months, 1 week","timestamp":1610406137,"status_display":"Accepted","runtime":"288 ms","url":"/submissions/detail/441775740/","is_pending":"Not Pending","title":"Container With Most Water","memory":"16.5 MB","code":"class Solution:\n    def maxArea(self, height: List[int]) -> int:\n        n = len(height)\n        curr_max = 0\n        curr_height = 0\n        last_height = 0\n        if n < 2:\n            return 0\n        \n        left = 0\n        right = n-1\n        \n        while right > left:\n            curr_height = min(height[left], height[right])\n            if curr_height > last_height:\n                rectangle = (right - left) * curr_height\n                curr_max = max(curr_max, rectangle)\n                last_height = curr_height\n            if height[right] >= height[left]:\n                left += 1\n            else:\n                right -= 1\n        \n        return curr_max\n        \n    \n#         # Brute Force: O(n^2) worst case\n#         # Note: n -> 3 * 10^4, too large\n        \n#         curr_max = 0\n#         if len(height) < 2:\n#             return 0\n        \n#         for i in range(len(height)-1):\n#             if height[i] is 0:\n#                 continue\n#             if i>0 and height[i] <= height[i-1]:\n#                 continue\n#             if (curr_max / height[i]) > (len(height)-1-i):\n#                 continue\n#             else:\n#                 for k in range(len(height)-i):\n#                     j = len(height)-k-1\n#                     container = (j - i) * min(height[i], height[j])\n#                     # print(container)\n#                     if curr_max > container:\n#                         pass\n#                     else:\n#                         curr_max = container\n                        \n#                     if height[j] >= height[i]:\n#                         break\n        \n#         return curr_max\n\n\n\n","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"container-with-most-water"}