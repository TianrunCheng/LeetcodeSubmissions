{"id":517932768,"lang":"python3","time":"2 weeks, 2 days","timestamp":1625520871,"status_display":"Accepted","runtime":"156 ms","url":"/submissions/detail/517932768/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"29.4 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> ListNode:\n        m = 0\n        ptr1 = headA\n        while ptr1 != None:\n            m += 1\n            ptr1 = ptr1.next\n        \n        n = 0\n        ptr2 = headB\n        while ptr2 != None:\n            n += 1\n            ptr2 = ptr2.next\n            \n        ptr1 = headA\n        ptr2 = headB\n        if m > n:\n            for _ in range(m - n):\n                ptr1 = ptr1.next\n            while(ptr1 != None):\n                if ptr1 == ptr2:\n                    return ptr1\n                ptr1 = ptr1.next\n                ptr2 = ptr2.next\n            return None\n        else:\n            for _ in range(n - m):\n                ptr2 = ptr2.next\n            while(ptr1 != None):\n                if ptr1 == ptr2:\n                    return ptr1\n                ptr1 = ptr1.next\n                ptr2 = ptr2.next\n            return None","compare_result":"111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists"}