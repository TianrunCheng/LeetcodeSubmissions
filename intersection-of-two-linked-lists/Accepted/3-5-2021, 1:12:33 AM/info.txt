{"id":463764172,"lang":"python3","time":"4 months, 2 weeks","timestamp":1614924753,"status_display":"Accepted","runtime":"152 ms","url":"/submissions/detail/463764172/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"29.3 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> ListNode:\n        pointA = headA\n        pointB = headB\n        lengthA = 0\n        lengthB = 0\n        while(pointA != None):\n            lengthA += 1\n            pointA = pointA.next\n        while(pointB != None):\n            lengthB += 1\n            pointB = pointB.next\n        \n        if lengthB < lengthA:\n            pointA = headB\n            pointB = headA\n            delta = lengthA - lengthB\n        else:\n            pointA = headA\n            pointB = headB\n            delta = lengthB - lengthA\n        \n        for i in range(delta):\n            print(pointB.val)\n            pointB = pointB.next\n        \n        while True:\n            if pointA == pointB:\n                return pointA\n            if pointA == None:\n                return None\n            pointA = pointA.next\n            pointB = pointB.next\n        \n        \n        \n        \n        \n        \n        ","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists"}