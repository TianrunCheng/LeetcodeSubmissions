{"id":513721094,"lang":"python3","time":"3 weeks, 3 days","timestamp":1624762638,"status_display":"Accepted","runtime":"72 ms","url":"/submissions/detail/513721094/","is_pending":"Not Pending","title":"Design Circular Queue","memory":"14.7 MB","code":"class MyCircularQueue:\n\n    def __init__(self, k: int):\n        self.__queue = [0] * k\n        self.__len = k\n        self.__head = -1\n        self.__tail = -1\n\n    def enQueue(self, value: int) -> bool:\n        if self.__head == -1:\n            self.__queue[0] = value\n            self.__head += 1\n            self.__tail += 1\n            # print(self.__queue)\n            return True\n        if self.__head == (self.__tail + 1) % self.__len:\n            # print(self.__queue)\n            return False\n        self.__tail = (self.__tail + 1) % self.__len\n        self.__queue[self.__tail] = value\n        # print(self.__queue)\n        return True\n\n    def deQueue(self) -> bool:\n        if self.__head == -1:\n            # print(self.__queue)\n            return False\n        if self.__head == self.__tail:\n            self.__head = -1\n            self.__tail = -1\n            # print(self.__queue)\n            return True\n        self.__head = (self.__head + 1) % self.__len\n        # print(self.__queue)\n        return True\n\n    def Front(self) -> int:\n        if self.__head == -1:\n            # print(self.__queue)\n            return -1\n        # print(self.__queue)\n        return self.__queue[self.__head]\n\n    def Rear(self) -> int:\n        if self.__head == -1:\n            # print(self.__queue)\n            return -1\n        # print(self.__queue)\n        return self.__queue[self.__tail]\n\n    def isEmpty(self) -> bool:\n        # print(self.__queue)\n        return self.__head == -1\n\n    def isFull(self) -> bool:\n        # print(self.__queue)\n        return self.__head == (self.__tail + 1) % self.__len\n\n\n# Your MyCircularQueue object will be instantiated and called as such:\n# obj = MyCircularQueue(k)\n# param_1 = obj.enQueue(value)\n# param_2 = obj.deQueue()\n# param_3 = obj.Front()\n# param_4 = obj.Rear()\n# param_5 = obj.isEmpty()\n# param_6 = obj.isFull()","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"design-circular-queue"}