{"id":279345573,"lang":"python3","time":"1 year, 8 months","timestamp":1573942127,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/279345573/","is_pending":"Not Pending","title":"Maximal Rectangle","memory":"N/A","code":"class Solution:\n    def maximalRectangle(self, matrix: List[List[str]]) -> int:\n        line = []\n        for i in range(len(matrix)):\n            line.append([])\n            for j in range(len(matrix[0])):\n                line[i].append(0)\n\n        for i in range(len(matrix)):\n            for j in range(len(matrix[0])):\n                k = j\n                while k < len(matrix[0]) and matrix[i][k] == '1':\n                    line[i][j] += 1\n                    k += 1\n        \n        if len(matrix) == 0:\n            return 0\n        \n        max_rec = 0\n        \n        for j in range(len(line[0])):\n            curr_lis = []\n            for i in range(len(line)):\n                curr_lis.append(line[i][j])\n                max_rec = max(line[i][j], max_rec)\n            for k in range(1, len(line)):\n                for _ in range(len(curr_lis)-1):\n                    curr_lis[_] = min(curr_lis[_], curr_lis[_+1])\n                    max_rec = max(curr_lis[_] * (k+1), max_rec)\n                curr_lis.pop(-1)\n        \n        return max_rec\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111110","title_slug":"maximal-rectangle"}