{"id":279351144,"lang":"python3","time":"1 year, 8 months","timestamp":1573943479,"status_display":"Accepted","runtime":"2496 ms","url":"/submissions/detail/279351144/","is_pending":"Not Pending","title":"Maximal Rectangle","memory":"13.8 MB","code":"class Solution:\n    def maximalRectangle(self, matrix: List[List[str]]) -> int:\n        maxarea = 0\n\n        dp = [[0] * len(matrix[0]) for _ in range(len(matrix))]\n        for i in range(len(matrix)):\n            for j in range(len(matrix[0])):\n                if matrix[i][j] == '0': continue\n\n                # compute the maximum width and update dp with it\n                width = dp[i][j] = dp[i][j-1] + 1 if j else 1\n\n                # compute the maximum area rectangle with a lower right corner at [i, j]\n                for k in range(i, -1, -1):\n                    width = min(width, dp[k][j])\n                    maxarea = max(maxarea, width * (i-k+1))\n        return maxarea\n\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-rectangle"}