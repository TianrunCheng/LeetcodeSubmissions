{"id":515583708,"lang":"java","time":"3Â weeks","timestamp":1625093684,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/515583708/","is_pending":"Not Pending","title":"Target Sum","memory":"38.9 MB","code":"public class Solution {\n    // int count = 0;\n    public int findTargetSumWays(int[] nums, int S) {\n        int[][] memo = new int[nums.length][2001];\n        for (int[] row: memo)\n            Arrays.fill(row, Integer.MIN_VALUE);\n        return calculate(nums, 0, 0, S, memo);\n    }\n    public int calculate(int[] nums, int i, int sum, int S, int[][] memo) {\n        if (i == nums.length) {\n            if (sum == S)\n                return 1;\n            else\n                return 0;\n        } else {\n            if (memo[i][sum + 1000] != Integer.MIN_VALUE) {\n                return memo[i][sum + 1000];\n            }\n            int add = calculate(nums, i + 1, sum + nums[i], S, memo);\n            int subtract = calculate(nums, i + 1, sum - nums[i], S, memo);\n            memo[i][sum + 1000] = add + subtract;\n            return memo[i][sum + 1000];\n        }\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"target-sum"}