{"id":453909826,"lang":"python3","time":"5 months, 1 week","timestamp":1612848827,"status_display":"Output Limit Exceeded","runtime":"N/A","url":"/submissions/detail/453909826/","is_pending":"Not Pending","title":"Number of Distinct Islands","memory":"N/A","code":"class Solution:\n    \n    global curr_shape, m, n\n    global shape\n    \n    def numDistinctIslands(self, grid: List[List[int]]) -> int:\n        \n        def deleteIsland(x: int, y: int, size: int, curr_shape: [str]):\n            if x < 0 or x >=m or y < 0 or y >= n:\n                return \"\"\n            if grid[x][y] is not 1:\n                return \"\"\n\n            grid[x][y] = 0\n            if y < n-1 and grid[x][y+1] is 1:  # going right\n                curr_shape.append(\"r\" + str(size))\n                print(curr_shape)\n                print(grid)\n                deleteIsland(x, y+1, size+1, curr_shape)\n            if x < (m-1) and grid[x+1][y] is 1:  # going down\n                curr_shape.append(\"d\" + str(size))\n                print(curr_shape)\n                print(grid)\n                deleteIsland(x+1, y, size+1, curr_shape)\n            if x > 0 and grid[x-1][y] is 1: # going up\n                curr_shape.append(\"u\" + str(size))\n                print(curr_shape)\n                print(grid)\n                deleteIsland(x-1, y, size+1, curr_shape)\n            if y > 0 and grid[x][y-1] is 1:  # going left\n                curr_shape.append(\"l\" + str(size))\n                print(curr_shape)\n                print(grid)\n                deleteIsland(x, y-1, size+1, curr_shape)\n            return curr_shape\n    \n        m = len(grid)\n        n = len(grid[0])\n        shape = {}\n        \n        for i in range(m):\n            for j in range(n):\n                if grid[i][j] is 1:\n                    curr_shape = []\n                    curr_shape = deleteIsland(i, j, 0, curr_shape)\n                    curr_shape_str = ''.join([str(elem) for elem in curr_shape])\n                    print(curr_shape_str)\n                    if curr_shape_str not in shape:\n                        shape[curr_shape_str] = 0\n        \n        return len(shape)\n","compare_resulttitle_slug":"number-of-distinct-islands"}