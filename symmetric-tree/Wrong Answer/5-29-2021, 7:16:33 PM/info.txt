{"id":500086726,"lang":"python3","time":"1 month, 3 weeks","timestamp":1622330193,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/500086726/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isSymmetric(self, root: TreeNode) -> bool:\n        \n        def sameTree(tree1: TreeNode, tree2: TreeNode) -> bool:\n            if tree1 == None and tree2 == None:\n                return True\n            elif tree2 == None or tree1 == None:\n                return False\n            else:\n                return sameTree(tree1.left, tree2.left) and sameTree(tree1.right, tree2.right)\n        \n        if root == None:\n            return True\n        \n        return sameTree(root.left, root.right)\n            ","compare_result":"1001111010000111101100001011000000100110001111010011010010100111011100011010000110111111010011110111100101101101011011010001100010111100101111010000111001101011000110001001111100111100110011010111","title_slug":"symmetric-tree"}