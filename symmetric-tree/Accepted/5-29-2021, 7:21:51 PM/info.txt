{"id":500087993,"lang":"python3","time":"1 month, 3 weeks","timestamp":1622330511,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/500087993/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"14.5 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isSymmetric(self, root: TreeNode) -> bool:\n        \n        def symTree(tree1: TreeNode, tree2: TreeNode) -> bool:\n            if tree1 == None and tree2 == None:\n                return True\n            elif tree2 == None or tree1 == None:\n                return False\n            else:\n                if tree1.val == tree2.val:\n                    return symTree(tree1.left, tree2.right) and symTree(tree1.right, tree2.left)\n                else:\n                    return False\n        \n        if root == None:\n            return True\n        \n        return symTree(root.left, root.right)\n            ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}