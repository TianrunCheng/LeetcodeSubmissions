{"id":519051981,"lang":"python3","time":"1 week, 6 days","timestamp":1625712550,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/519051981/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"14.4 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:\n        # recursive approach\n        \n        if not l1:\n            return l2\n        if not l2:\n            return l1\n        # can I implement it as tail recursion?\n        if l1.val <= l2.val:\n            l1.next = self.mergeTwoLists(l1.next, l2)\n            return l1\n        else:\n            l2.next = self.mergeTwoLists(l1, l2.next)\n            return l2\n        \n        \n        \n        \n#         # iterative approach\n#         dummy = ListNode()\n#         head = dummy\n#         while(l1 != None or l2 != None):\n#             if l1 == None:\n#                 head.next = l2\n#                 head = head.next\n#                 l2 = l2.next\n#             elif l2 == None:\n#                 head.next = l1\n#                 head = head.next\n#                 l1 = l1.next\n#             else:\n#                 if l1.val > l2.val:\n#                     head.next = l2\n#                     head = head.next\n#                     l2 = l2.next\n#                 else:\n#                     head.next = l1\n#                     head = head.next\n#                     l1 = l1.next\n#         return dummy.next","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists"}