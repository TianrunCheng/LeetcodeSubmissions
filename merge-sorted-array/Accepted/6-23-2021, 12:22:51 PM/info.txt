{"id":512149729,"lang":"python3","time":"4Â weeks","timestamp":1624465371,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/512149729/","is_pending":"Not Pending","title":"Merge Sorted Array","memory":"14.4 MB","code":"class Solution:\n    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:\n        \"\"\"\n        Do not return anything, modify nums1 in-place instead.\n        \"\"\"\n        i = m - 1\n        j = n - 1\n        for k in range(m + n - 1, -1, -1):\n            if i >= 0 and i < m and j >= 0 and j < n:\n                if nums1[i] > nums2[j]:\n                    nums1[k] = nums1[i]\n                    i -= 1\n                else:\n                    nums1[k] = nums2[j]\n                    j -= 1\n            elif i >= 0 and i < m:\n                nums1[k] = nums1[i]\n                i -= 1\n            else:\n                nums1[k] = nums2[j]\n                j -= 1\n        return\n        \n        \n        \n\n#       # XXXXXXX this is a second try wrong solution. XXXXXXXXX\n#       # didn't think through and started working on the code\n#       # the solution tries to move and merge items from left to right\n#         if n == 0:\n#             return\n        \n#         i = -1\n#         n1 = 0\n#         # n1: the times we withdraw from nums1\n#         j = 0\n#         # i: the next to merge in nums1, stored in nums2[i] when j > 0\n#         # j: the next to merge in nums2, stored in nums2[j]\n        \n#         for k in range(m + n):\n#             print(nums1)\n#             print(nums2)\n#             print(\"k = \" + str(k))\n#             if i == -1:\n#                 print(\"i==-1\")\n#                 if k < m:\n#                     if nums1[k] <= nums2[j]:\n#                         n1 += 1\n#                     else:\n#                         swap = nums1[k]\n#                         nums1[k] = nums2[j]\n#                         nums2[j] = swap\n#                         i = j\n#                         j += 1\n#                 else:\n#                     nums1[k] = nums2[j]\n#                     j += 1\n#             elif j < n:\n#                 print(\"i=\" + str(i) + \"; j=\" + str(j))\n#                 if nums2[i] > nums2[j]:\n#                     swap = nums1[k]\n#                     nums1[k] = nums2[j]\n#                     nums2[j] = swap\n#                     j += 1\n#                 elif k < m:\n#                     swap = nums1[k]\n#                     nums1[k] = nums2[i]\n#                     nums2[i] = swap\n#                     n1 += 1\n#                 else:\n#                     nums1[k] = nums2[i]\n#                     if n1 < m:\n#                         i += 1\n#                         n1 += 1\n#                     else:\n#                         i = -1\n#             else:\n#                 if k >= m:\n#                     nums1[k] = nums2[i]\n#                     n1 += 1\n#                     i += 1\n#                 else:\n#                     swap = nums1[k]\n#                     nums1[k] = nums2[i]\n#                     nums2[i] =swap\n#                     n1 += 1\n            \n#             print()\n#         return\n                    \n                \n        \n        \n        \n        \n        \n        \n#       # XXXXX this is a first try wrong solution XXXXX\n#         j = 0\n        \n#         # remember to discuss corner case where nums1[i], nums2[j] does not exist\n        \n#         for i in range(m+n):\n#             print(nums1)\n#             print(nums2)\n#             if j >= n:\n#                 return\n#             if i < m:\n#                 if nums1[i] > nums2[j]:\n#                     swap = nums1[i]\n#                     nums1[i] = nums2[j]\n#                     nums2[j] = swap\n#                     j += 1\n#             else:\n#                 nums1[i] = nums2[j]\n#                 j += 1\n        \n#         return\n\n        \n        \n            \n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"merge-sorted-array"}