{"id":443014678,"lang":"python3","time":"6 months, 1 week","timestamp":1610657740,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/443014678/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"14.5 MB","code":"class Solution:\n    def letterCombinations(self, digits: str) -> List[str]:\n\n        \n        result = []\n        if len(digits) is 0:\n            return result\n        \n        dic = {\n            \"2\":[\"a\", \"b\", \"c\"],\n            \"3\":[\"d\", \"e\", \"f\"],\n            \"4\":[\"g\", \"h\", \"i\"],\n            \"5\":[\"j\", \"k\", \"l\"],\n            \"6\":[\"m\", \"n\", \"o\"],\n            \"7\":[\"p\", \"q\", \"r\", \"s\"],\n            \"8\":[\"t\", \"u\", \"v\"],\n            \"9\":[\"w\", \"x\", \"y\", \"z\"]\n        }\n        \n        def build_string():\n            curr_string = \"\"\n            for j in range(n):\n                curr_string += dic[digits[j]][state[j]]\n            return curr_string\n        \n        n = len(digits)\n        state = [0 for i in range(n)]\n        result.append(build_string())\n        # which letter we're at for each digit\n        while True:\n            flag = False\n            for i in reversed(range(n)):\n                if state[i] < len(dic[digits[i]])-1:\n                    state[i] += 1\n                    if i is not (n-1):\n                        for j in range(i+1, n):\n                            state[j] = 0\n                    result.append(build_string())\n                    flag = True\n                    break\n            if not flag:\n                break\n        \n        return result","compare_result":"1111111111111111111111111","title_slug":"letter-combinations-of-a-phone-number"}