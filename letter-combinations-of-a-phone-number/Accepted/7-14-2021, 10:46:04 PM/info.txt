{"id":522728416,"lang":"python3","time":"6 days, 23 hours","timestamp":1626317164,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/522728416/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"14.4 MB","code":"class Solution:\n    def letterCombinations(self, digits: str) -> List[str]:\n        if not digits:\n            return \"\"\n        dic = {\n            \"2\":[\"a\", \"b\", \"c\"],\n            \"3\":[\"d\", \"e\", \"f\"],\n            \"4\":[\"g\", \"h\", \"i\"],\n            \"5\":[\"j\", \"k\", \"l\"],\n            \"6\":[\"m\", \"n\", \"o\"],\n            \"7\":[\"p\", \"q\", \"r\", \"s\"],\n            \"8\":[\"t\", \"u\", \"v\"],\n            \"9\":[\"w\", \"x\", \"y\", \"z\"]\n        }\n        \n        res = []\n        self.curr = []\n        \n        def backtrack(ind: int):\n            # build starting at index\n            if ind == len(digits):\n                res.append(\"\".join(self.curr))\n                return\n            \n            for c in dic[digits[ind]]:\n                self.curr.append(c)\n                backtrack(ind + 1)\n                self.curr.pop()\n                \n        backtrack(0)\n        return res\n            \n        ","compare_result":"1111111111111111111111111","title_slug":"letter-combinations-of-a-phone-number"}