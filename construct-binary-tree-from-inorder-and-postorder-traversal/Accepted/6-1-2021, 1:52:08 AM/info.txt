{"id":501210663,"lang":"python3","time":"1 month, 2 weeks","timestamp":1622526728,"status_display":"Accepted","runtime":"252 ms","url":"/submissions/detail/501210663/","is_pending":"Not Pending","title":"Construct Binary Tree from Inorder and Postorder Traversal","memory":"88.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def buildTree(self, inorder: List[int], postorder: List[int]) -> TreeNode:\n        if len(inorder) == 0:\n            return None\n        if len(inorder) == 1:\n            root = TreeNode(inorder[0])\n            return root\n        val = postorder[-1]\n        root = TreeNode(val)\n        cut = inorder.index(val)\n        root.left = self.buildTree(inorder[0:cut], postorder[0:cut])\n        root.right = self.buildTree(inorder[cut+1:], postorder[cut:-1])\n        return root\n        \n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-binary-tree-from-inorder-and-postorder-traversal"}