{"id":497778865,"lang":"python3","time":"1 month, 4 weeks","timestamp":1621893122,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/497778865/","is_pending":"Not Pending","title":"Find Minimum in Rotated Sorted Array","memory":"14.6 MB","code":"class Solution:\n    def findMin(self, nums: List[int]) -> int:\n        # keep search range [left, right] more than 2 elements, mid index round down\n        # find the \"sharp drop\" point in range [left, right], \n        # if nums[mid] > nums[right], eliminate left half along with mid ele\n        # if nums[mid] < nums[right], eliminate right half without the mid ele\n        \n        left = 0\n        right = len(nums) - 1\n        \n        if right < 1:\n            return nums[0]\n        \n        while(left < right):\n            mid = left + (right - left) // 2\n            if nums[mid] > nums[right]:\n                left = mid + 1\n            else:\n                right = mid\n        \n        return nums[left]","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-minimum-in-rotated-sorted-array"}