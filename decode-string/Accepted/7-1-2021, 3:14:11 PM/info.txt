{"id":515989246,"lang":"python3","time":"2Â weeks, 6Â days","timestamp":1625166851,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/515989246/","is_pending":"Not Pending","title":"Decode String","memory":"14.2 MB","code":"class Solution:\n    def decodeString(self, s: str) -> str:\n        \n        s = list(s)\n        \n        def readNum(start: int) -> int:\n            end = start\n            while(s[end].isdigit()):\n                end += 1\n            return end\n        # s[end] is not a digit\n        \n        res = []\n        \n        def recurBuild(start: int) -> int:\n            # build the result from s[start], return start of the next pattern\n            i = start\n            while(i < len(s) and s[i] != \"]\"):\n                # print(str(i) + \": \" + s[i])\n                if s[i].isalpha():\n                    res.append(s[i])\n                    i += 1\n                elif s[i].isdigit():\n                    end = readNum(i)\n                    num = int(\"\".join(s[i:end]))\n                    # print(\"num = \" + str(num))\n                    for j in range(num):\n                        i = recurBuild(end+1)\n                    \n            return (i+1)\n        \n        recurBuild(0)\n        return \"\".join(res)\n    \n    \n    \n    ","compare_result":"1111111111111111111111111111111111","title_slug":"decode-string"}