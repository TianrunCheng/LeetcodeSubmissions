{"id":514603002,"lang":"python3","time":"3 weeks, 2 days","timestamp":1624917617,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/514603002/","is_pending":"Not Pending","title":"Evaluate Reverse Polish Notation","memory":"14.6 MB","code":"import math\n\nclass Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        # use a stack to store not used operands\n        # when meeting a operate, pop out two most recent operands\n        # straight forward from the definition of RPN\n        \n        stack = []\n        \n        for i in range(len(tokens)):\n            curr = tokens[i]\n            if curr == \"+\":\n                b = stack.pop()\n                a = stack.pop()\n                stack.append(a + b)\n            elif curr == \"-\":\n                b = stack.pop()\n                a = stack.pop()\n                stack.append(a - b)\n            elif curr == \"*\":\n                b = stack.pop()\n                a = stack.pop()\n                stack.append(a * b)\n            elif curr == \"/\":\n                b = stack.pop()\n                a = stack.pop()\n                f = a / b\n                if f > 0:\n                    stack.append(math.floor(f))\n                else:\n                    stack.append( - math.floor(-f))\n            else:\n                stack.append(int(curr))\n        \n        return stack[-1]","compare_result":"11111111111111111111","title_slug":"evaluate-reverse-polish-notation"}