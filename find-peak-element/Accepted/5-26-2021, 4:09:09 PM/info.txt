{"id":498694053,"lang":"python3","time":"1 month, 3 weeks","timestamp":1622059749,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/498694053/","is_pending":"Not Pending","title":"Find Peak Element","memory":"14.4 MB","code":"class Solution:\n    def findPeakElement(self, nums: List[int]) -> int:\n        left = 0\n        right = len(nums) - 1\n        if right < 1:\n            return 0\n        \n        # [left, right] is the range of appearing of a possible peak element\n        # by keeping: nums[left-1] < nums[left] and nums[right] > nums[right+1] at all times\n        # we guarantee there exist a peak in range [left, right]\n        while( left < right ):\n            mid = left + (right - left) // 2\n            if nums[mid] < nums[mid+1]:\n                left = mid + 1\n            else:\n                right = mid\n        \n        return left\n            ","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-peak-element"}