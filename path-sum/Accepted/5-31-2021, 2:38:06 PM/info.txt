{"id":500976317,"lang":"python3","time":"1 month, 3 weeks","timestamp":1622486286,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/500976317/","is_pending":"Not Pending","title":"Path Sum","memory":"16 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def hasPathSum(self, root: TreeNode, targetSum: int) -> bool:\n        stack = []\n        \n        if root == None:\n            return False\n        \n        stack.append((root, root.val))\n        \n        while(len(stack) > 0):\n            (node, val) = stack.pop(-1)\n            if node.left == None and node.right == None:\n                if val == targetSum:\n                    return True\n            if node.right != None:\n                stack.append((node.right, val + node.right.val))\n            if node.left != None:\n                stack.append((node.left, val + node.left.val))\n        \n        return False","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum"}