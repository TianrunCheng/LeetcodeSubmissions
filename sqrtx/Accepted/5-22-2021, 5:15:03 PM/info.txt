{"id":496818862,"lang":"python3","time":"2Â months","timestamp":1621718103,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/496818862/","is_pending":"Not Pending","title":"Sqrt(x)","memory":"14.2 MB","code":"class Solution:\n    def mySqrt(self, x: int) -> int:\n        l = 0\n        r = 1024 * 64\n        # r * r = 2^16 * 2^16 = 2^32 (largest_int)\n        \n        if x < r:\n            r = x\n        \n        while ( l <= r ):\n            m = (l + r) // 2\n            if (m+1) * (m+1) < x:\n                l = m+1\n            elif x < (m+1) * (m+1):\n                if m * m <= x:\n                    return m\n                else:\n                    r = m-1\n            else:\n                return m+1\n\n#  result <= target < result+1\n#\n#                         x\n#                         | \n# [0, ..., pivot-1, pivot, pivot+1, ... , m]\n#  l                  m                    r\n#     ","compare_resulttitle_slug":"sqrtx"}