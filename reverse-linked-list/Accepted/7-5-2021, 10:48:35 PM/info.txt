{"id":518028989,"lang":"python3","time":"2 weeks, 1 day","timestamp":1625539715,"status_display":"Accepted","runtime":"1064 ms","url":"/submissions/detail/518028989/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"19 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def reverseList(self, head: ListNode) -> ListNode:\n        if head == None or head.next == None:\n            return head\n        curr = head\n        # exclude the first element, recursively solve start from head.next\n        head = self.reverseList(head.next)\n        tail = head\n        while(tail.next != None):\n            tail = tail.next\n        tail.next = curr\n        curr.next = None\n        return head\n        \n#         if head == None:\n#             return None\n        \n#         tail = head\n#         while(tail.next != None):\n#             curr = tail.next\n#             tail.next = tail.next.next\n#             curr.next = head\n#             head = curr\n        \n#         return head","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list"}