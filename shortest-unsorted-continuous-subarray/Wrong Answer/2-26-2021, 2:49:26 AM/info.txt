{"id":460856666,"lang":"python3","time":"4Â months, 3Â weeks","timestamp":1614325766,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/460856666/","is_pending":"Not Pending","title":"Shortest Unsorted Continuous Subarray","memory":"N/A","code":"class Solution:\n    def findUnsortedSubarray(self, nums: List[int]) -> int:\n        helper = []\n        for n in nums:\n            helper.append(n)\n        \n        helper.sort()\n        # print(helper)\n        start = 0\n        end = 0\n        for i in range(len(nums)):\n            if nums[i] != helper[i]:\n                start = i\n                break\n        for i in range(len(nums)-1,0,-1):\n            if nums[i] != helper[i]:\n                end = i\n                break\n        \n        return (end - start + 1) ","compare_result":"1000111011011101011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110011111111100110111111011001111110110011111111111111111110111111010111111011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-unsorted-continuous-subarray"}