{"id":460857194,"lang":"python3","time":"4Â months, 3Â weeks","timestamp":1614325876,"status_display":"Accepted","runtime":"196 ms","url":"/submissions/detail/460857194/","is_pending":"Not Pending","title":"Shortest Unsorted Continuous Subarray","memory":"15.3 MB","code":"class Solution:\n    def findUnsortedSubarray(self, nums: List[int]) -> int:\n        helper = []\n        for n in nums:\n            helper.append(n)\n        \n        helper.sort()\n        # print(helper)\n        start = 0\n        end = 0\n        for i in range(len(nums)):\n            if nums[i] != helper[i]:\n                start = i\n                break\n        for i in range(len(nums)-1,-1,-1):\n            if nums[i] != helper[i]:\n                end = i\n                break\n        \n        if end == start:\n            return 0\n        \n        return (end - start + 1) ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-unsorted-continuous-subarray"}