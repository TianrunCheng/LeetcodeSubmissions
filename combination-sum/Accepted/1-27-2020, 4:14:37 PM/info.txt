{"id":297946721,"lang":"python","time":"1 year, 5 months","timestamp":1580159677,"status_display":"Accepted","runtime":"108 ms","url":"/submissions/detail/297946721/","is_pending":"Not Pending","title":"Combination Sum","memory":"11.8 MB","code":"class Solution(object):\n    def combinationSum(self, candidates, target):\n        res = []\n        candidates.sort()\n        self.dfs(candidates, target, 0, [], res)\n        return res\n\n    def dfs(self, nums, target, index, path, res):\n        if target < 0:\n            return  # backtracking\n        if target == 0:\n            res.append(path)\n            return \n        for i in xrange(index, len(nums)):\n            self.dfs(nums, target-nums[i], i, path+[nums[i]], res)","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum"}