{"id":280676709,"lang":"python3","time":"1 year, 8 months","timestamp":1574368088,"status_display":"Accepted","runtime":"192 ms","url":"/submissions/detail/280676709/","is_pending":"Not Pending","title":"Candy","memory":"15.2 MB","code":"class Solution:\n    def candy(self, ratings: List[int]) -> int:\n        if len(ratings) == 0:\n            return 1\n        i = 0\n        candies = 0\n        \n        block_len = 0\n        block_candies = 0\n        block_ending = 0\n        block_start = 0\n        \n        curr_candies = 0\n        \n        stack = [-1]\n        \n        while i < len(ratings):\n            if stack[-1] == -1:\n                stack.append(ratings[i])\n                candies += block_candies\n                block_len = 1\n                curr_candies = 1\n                block_candies = 1\n                block_start = 1\n            else:\n                if stack[-1] < ratings[i]:  # going up in block\n                    curr_candies += 1\n                    block_len += 1\n                    block_candies += curr_candies\n                    stack.append(ratings[i])\n                elif stack[-1] > ratings[i]:  # going down\n                    if len(stack) > 2 and stack[-2] < stack[-1]:  # going down and make block\n                        \n                        candies += block_candies\n                        candies = candies - min(block_start, block_ending)\n                        stack = [-1, stack[-1]]\n                        block_ending = curr_candies\n                        \n                        stack.append(ratings[i])\n                        block_len = 2\n                        block_candies = 3\n                        curr_candies = 1\n                        block_start = 2\n                    else:  # going down in same block\n                        if curr_candies > 1:\n                            curr_candies = curr_candies - 1\n                            block_len += 1\n                            block_candies += curr_candies\n                            stack.append(ratings[i])\n                        else:  # rising the ground of block by 1\n                            block_len += 1\n                            block_candies += block_len\n                            block_start += 1\n                            stack.append(ratings[i])\n                elif stack[-1] == ratings[i]:\n                    candies += block_candies\n                    candies = candies - min(block_start, block_ending)\n                    stack = [-1]\n                    block_ending = 0\n                    \n                    stack.append(ratings[i])\n                    block_len = 1\n                    block_candies = 1\n                    curr_candies = 1\n                    block_start = 1\n            i += 1\n        candies += block_candies\n        candies = candies - min(block_start, block_ending)\n        return candies\n                        \n                        ","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"candy"}