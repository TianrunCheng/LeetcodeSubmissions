{"id":518487424,"lang":"python3","time":"2Â weeks, 1Â day","timestamp":1625614670,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/518487424/","is_pending":"Not Pending","title":"Insert into a Sorted Circular Linked List","memory":"N/A","code":"\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val=None, next=None):\n        self.val = val\n        self.next = next\n\"\"\"\n\nclass Solution:\n    def insert(self, head: 'Node', insertVal: int) -> 'Node':\n        \n        p = Node(insertVal)\n        \n        if not head:\n            p.next = p\n            return p\n        \n        start = head\n        while(start.next.val >= start.val):\n            # print(start.val)\n            start = start.next\n        # start.next is the min node\n        \n        if insertVal >= start.val or insertVal <= start.next.val:\n            # add before the min node, after node start \n            # print(start.val)\n            p.next = start.next\n            start.next = p\n        else:\n            while(insertVal > start.next.val):\n                # print(start.val)\n                start = start.next\n            # p <= start.next, add after start\n            p.next = start.next\n            start.next = p\n        return head\n            \n        ","compare_result":"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"insert-into-a-sorted-circular-linked-list"}