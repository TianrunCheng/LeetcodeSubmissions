{"id":496001104,"lang":"python3","time":"2Â months","timestamp":1621555794,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/496001104/","is_pending":"Not Pending","title":"Next Permutation","memory":"14.3 MB","code":"class Solution:\n    def nextPermutation(self, nums: List[int]) -> None:\n        \"\"\"\n        Do not return anything, modify nums in-place instead.\n        \"\"\"\n        n = len(nums)\n        if n <= 1:\n            return\n        \n        right = n - 1\n        left = n - 2\n        \n        while(left >= 0 and nums[left + 1] <= nums[left]):\n            left = left - 1\n        # jumps out of loop only when nums[l] < nums[l+1] or when l = 0\n        # print(left)\n        if (left < 0):\n            left = 0\n            while(right > left):\n                temp = nums[right]\n                nums[right] = nums[left]\n                nums[left] = temp\n                right -= 1\n                left += 1\n            return\n        \n        # find the number just greater than nums[left] and label it sub\n        sub = right\n        while(nums[sub] <= nums[left]):\n            sub -= 1\n        # print(sub)\n        temp = nums[sub]\n        nums[sub] = nums[left]\n        nums[left] = temp\n        \n        left += 1\n        while(right > left):\n            temp = nums[right]\n            nums[right] = nums[left]\n            nums[left] = temp\n            right -= 1\n            left += 1\n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"next-permutation"}