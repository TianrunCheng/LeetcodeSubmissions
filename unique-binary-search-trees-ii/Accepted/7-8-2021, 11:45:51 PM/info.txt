{"id":519600516,"lang":"python3","time":"1 week, 5 days","timestamp":1625802351,"status_display":"Accepted","runtime":"96 ms","url":"/submissions/detail/519600516/","is_pending":"Not Pending","title":"Unique Binary Search Trees II","memory":"15.5 MB","code":"class Solution:\n    def generateTrees(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: List[TreeNode]\n        \"\"\"\n        def generate_trees(start, end):\n            if start > end:\n                return [None,]\n            \n            all_trees = []\n            for i in range(start, end + 1):  # pick up a root\n                # all possible left subtrees if i is choosen to be a root\n                left_trees = generate_trees(start, i - 1)\n                \n                # all possible right subtrees if i is choosen to be a root\n                right_trees = generate_trees(i + 1, end)\n                \n                # connect left and right subtrees to the root i\n                for l in left_trees:\n                    for r in right_trees:\n                        current_tree = TreeNode(i)\n                        current_tree.left = l\n                        current_tree.right = r\n                        all_trees.append(current_tree)\n            \n            return all_trees\n        \n        return generate_trees(1, n) if n else []","compare_result":"11111111","title_slug":"unique-binary-search-trees-ii"}