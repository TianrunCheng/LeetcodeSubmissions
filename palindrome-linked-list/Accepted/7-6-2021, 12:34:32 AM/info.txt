{"id":518068421,"lang":"python3","time":"2 weeks, 1 day","timestamp":1625546072,"status_display":"Accepted","runtime":"808 ms","url":"/submissions/detail/518068421/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"39.3 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def isPalindrome(self, head: ListNode) -> bool:\n        # maybe we could reverse the second half of the list\n        count = 0\n        curr = head\n        while curr:\n            count += 1\n            curr = curr.next\n        \n        hal = head\n        for _ in range(count // 2):\n            hal = hal.next\n        \n        curr_hal = hal\n        while hal.next:\n            temp = hal.next\n            hal.next = hal.next.next\n            temp.next = curr_hal\n            curr_hal = temp\n        \n        while curr_hal:\n            if head.val == curr_hal.val:\n                head = head.next\n                curr_hal = curr_hal.next\n            else:\n                return False\n        \n        return True\n            ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list"}