{"id":510293177,"lang":"python3","time":"1Â month","timestamp":1624134422,"status_display":"Accepted","runtime":"92 ms","url":"/submissions/detail/510293177/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"14.9 MB","code":"class Solution:\n    def minPathSum(self, grid: List[List[int]]) -> int:\n        m = len(grid)   # number of rows\n        n = len(grid[0])    # number of columns\n        \n        res = [0] * n\n        \n        \n        for i in range(m):\n            if i == 0:\n                for j in range(n):\n                    if j == 0:\n                        res[j] = grid[i][j]\n                    else:\n                        res[j] = res[j-1] + grid[i][j]\n            else:\n                for j in range(n):\n                    if j == 0:\n                        res[j] = res[j] + grid[i][j]\n                    else:\n                        swap = min(res[j-1], res[j])\n                        res[j] = grid[i][j] + swap\n        return res[-1]\n            ","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum"}