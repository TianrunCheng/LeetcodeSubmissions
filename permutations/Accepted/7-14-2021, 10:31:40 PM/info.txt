{"id":522723167,"lang":"python3","time":"6 days, 23 hours","timestamp":1626316300,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/522723167/","is_pending":"Not Pending","title":"Permutations","memory":"14.2 MB","code":"class Solution:\n    def permute(self, nums: List[int]) -> List[List[int]]:\n        self.curr = []\n        used = set()\n        \n        res = []\n        \n        def backtrack():\n            if len(self.curr) == len(nums):\n                # print(self.curr)\n                res.append(self.curr.copy())\n                # cannot append (self.curr), will not create new copy of curr\n                return\n            \n            for num in nums:\n                if num not in used:\n                    self.curr.append(num)\n                    used.add(num)\n                    backtrack()\n                    used.remove(num)\n                    self.curr.pop()\n        \n        backtrack()\n        \n        return res","compare_result":"11111111111111111111111111","title_slug":"permutations"}