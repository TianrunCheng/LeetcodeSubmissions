{"id":295939717,"lang":"python3","time":"1Â year, 6Â months","timestamp":1579550251,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/295939717/","is_pending":"Not Pending","title":"Permutations","memory":"12.7 MB","code":"class Solution:\n    def permute(self, nums: List[int]) -> List[List[int]]:\n        \n        \n        def fn(nums: List[int]) -> List[List[int]]:\n            if len(nums) == 1:\n                return [nums]\n            else:\n                ans = []\n                for i in range(len(nums)):\n                    num = []\n                    for j in range(len(nums)):\n                        if j != i:\n                            num.append(nums[j])\n                    sub_ans = fn(num)\n                    for _ in sub_ans:\n                        _.append(nums[i])\n                        ans.append(_)\n                return ans\n        \n        \n        ans = fn(nums)\n        return ans","compare_result":"1111111111111111111111111","title_slug":"permutations"}