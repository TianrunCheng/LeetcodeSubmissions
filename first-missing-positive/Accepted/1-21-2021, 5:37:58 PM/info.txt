{"id":446064033,"lang":"python3","time":"6Â months","timestamp":1611268678,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/446064033/","is_pending":"Not Pending","title":"First Missing Positive","memory":"14.2 MB","code":"class Solution:\n    def firstMissingPositive(self, nums: List[int]) -> int:\n        \n# \"\"\"Cycle Sort: \"\"\"        \n#         i = 0\n#         n = len(nums)\n#         while i < n:\n#             j = nums[i] - 1\n#             # put num[i] to the correct place if nums[i] in the range [1, n]\n#             if 0 <= j < n and nums[i] != nums[j]:\n#                 nums[i], nums[j] = nums[j], nums[i]\n#             else:\n#                 i += 1\n#         # so far, all the integers that could find their own correct place \n#         # have been put to the correct place, next thing is to find out the\n#         # place that occupied wrongly\n#         for i in range(n):\n#             if nums[i] != i + 1:\n#                 return i + 1\n#         return n + 1\n    \n    \n\n\n# This is my original solution:\n# Move around numbers to put them into the right place\n\n        n = len(nums)\n        if n == 0:\n            return 1\n        \n        for i in range(n):\n            # ii = i  # the starting index\n            # x = nums[ii]  # the value on starting index\n            # print(\"i is \" + str(i))\n            if nums[i] < 1 or nums[i] > n:\n                nums[i] = 0  # omit this number\n                # print(nums)\n            elif nums[i] == i+1:\n                pass  # leave the already found pos int be\n            else:  # need to find index x-1 and mark its been found\n                \n                \n                x = nums[i]  # the value to be recorded\n                swap = nums[x-1]  # remember the number originally occupying the [x-1] index\n                nums[x-1] = x  # record that x has been found\n                nums[i] = 0\n                # print(nums)\n                # print(swap)\n                # ii = x - 1  # new starting index\n                x =  swap   # new value to record\n                while(x >=1 and x<=n and nums[x-1] != x):\n                    \n                    swap = nums[x-1]\n                    nums[x-1] = x\n                    x = swap\n                    # print(nums)\n                    # print(swap)\n                          \n        # print(nums)\n        for i in range(n):\n            if nums[i] != i+1:\n                return (i+1)\n        \n        return n+1","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"first-missing-positive"}