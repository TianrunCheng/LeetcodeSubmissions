{"id":520406361,"lang":"python3","time":"1 week, 4 days","timestamp":1625941875,"status_display":"Accepted","runtime":"168 ms","url":"/submissions/detail/520406361/","is_pending":"Not Pending","title":"Search a 2D Matrix II","memory":"21.3 MB","code":"class Solution:\n    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:\n        \n        def searchRectangle(left, up, right, down):\n            \n            if left > right or up > down:\n                return False\n            \n            if matrix[up][left] > target or matrix[down][right] < target:\n                return False\n            \n            mid = left + (right - left) // 2\n            row = up\n            \n            while row <= down and matrix[row][mid] <= target:\n                if matrix[row][mid] == target:\n                    # \"is\" will not work here, why?\n                    return True\n                row += 1\n            # matrix[row][mid] > target, matrix[row-1][mid] < target\n            \n            return searchRectangle(left, row, mid-1, down) or searchRectangle(mid+1, up, right, row-1)\n        \n        \n        return searchRectangle(0, 0, len(matrix[0])-1, len(matrix)-1)","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix-ii"}