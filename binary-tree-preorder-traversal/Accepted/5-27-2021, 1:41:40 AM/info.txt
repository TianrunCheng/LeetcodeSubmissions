{"id":498860934,"lang":"python3","time":"1 month, 3 weeks","timestamp":1622094100,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/498860934/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"14.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def preorderTraversal(self, root: TreeNode) -> List[int]:\n        res = []\n        \n        def preorder(node: TreeNode):\n            if node == None:\n                return\n            res.append(node.val)\n            preorder(node.left)\n            preorder(node.right)\n            return\n        \n        preorder(root)\n        \n        return res","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal"}