{"id":498870547,"lang":"python3","time":"1 month, 3 weeks","timestamp":1622095644,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/498870547/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def preorderTraversal(self, root: TreeNode) -> List[int]:\n        # iterative solution\n        stack = []\n        res = []\n        \n        stack.append(root)\n        \n        while(len(stack) > 0):\n            node = stack.pop(-1)\n            res.append(node.val)\n            if node.right != None:\n                stack.append(node.right)\n            if node.left != None:\n                stack.append(node.left)\n        \n        return res\n        \n        \n        \n        \n        \n        \n        \n        # recursive solution\n#         res = []\n        \n#         def preorder(node: TreeNode):\n#             if node == None:\n#                 return\n#             res.append(node.val)\n#             preorder(node.left)\n#             preorder(node.right)\n#             return\n        \n#         preorder(root)\n        \n#         return res\n","compare_result":"100000000000000000000000000000000000000000000000000000000000000000000","title_slug":"binary-tree-preorder-traversal"}