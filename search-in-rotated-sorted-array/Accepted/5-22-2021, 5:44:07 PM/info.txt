{"id":496827707,"lang":"python3","time":"2Â months","timestamp":1621719847,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/496827707/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array","memory":"14.7 MB","code":"class Solution:\n    def search(self, nums: List[int], target: int) -> int:\n        \n        # \n        # \"\"\" \n        # Its interesting that this brute solution is faster than 75.5% = =\n        # \"\"\"\n        # for i in range(len(nums)):\n        #     if nums[i] == target:\n        #         return i\n        # return -1\n        \n        # How do you begin a binary search in a rotated array?\n        n = len(nums)\n        lo = 0\n        hi = n - 1\n        \n        while(lo <= hi):\n            mid = lo + (hi - lo)//2\n            print(lo, mid, hi)\n            if nums[lo] <= nums[mid] and nums[hi] <= nums[lo]:\n                #        mid\n                #  lo \n                #               hi\n                if target == nums[hi]:\n                    return hi\n                if target == nums[lo]:\n                    return lo\n                if target == nums[mid]:\n                    return mid\n                if target > nums[lo] and target < nums[mid]:\n                    hi = mid - 1\n                else:\n                    lo = mid + 1\n            elif nums[hi] <= nums[lo] and nums[mid] <= nums[hi]:\n                #  lo\n                #              hi\n                #       mid\n                if target == nums[hi]:\n                    return hi\n                if target == nums[lo]:\n                    return lo\n                if target == nums[mid]:\n                    return mid\n                if target > nums[mid] and target < nums[hi]:\n                    lo = mid + 1\n                else:\n                    hi = mid - 1\n            elif nums[lo] <= nums[mid] and nums[mid] <= nums[hi]:\n                #          hi\n                #     mid\n                # lo\n                if target == nums[hi]:\n                    return hi\n                if target == nums[lo]:\n                    return lo\n                if target == nums[mid]:\n                    return mid\n                if target > nums[mid]:\n                    lo = mid + 1\n                else:\n                    hi = mid - 1\n        \n        return -1\n                \n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-in-rotated-sorted-array"}