{"id":519969514,"lang":"python3","time":"1 week, 5 days","timestamp":1625862723,"status_display":"Accepted","runtime":"908 ms","url":"/submissions/detail/519969514/","is_pending":"Not Pending","title":"Sort an Array","memory":"22.2 MB","code":"class Solution:\n    def merge(self, left, right):\n        res = []\n        left_cursor = right_cursor = 0\n        \n        while left_cursor < len(left) and right_cursor < len(right):\n            if left[left_cursor] > right[right_cursor]:\n                res.append(right[right_cursor])\n                right_cursor += 1\n            else:\n                res.append(left[left_cursor])\n                left_cursor += 1\n                \n        res.extend(right[right_cursor:])\n        res.extend(left[left_cursor:])\n        return res\n        \n    \n    def sortArray(self, nums: List[int]) -> List[int]:\n        n = len(nums)\n        if len(nums) < 2:\n            return nums\n        left = self.sortArray(nums[:(n // 2)])\n        right = self.sortArray(nums[(n // 2):])\n        return self.merge(left, right)","compare_result":"1111111111111","title_slug":"sort-an-array"}