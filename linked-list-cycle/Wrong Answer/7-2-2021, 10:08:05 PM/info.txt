{"id":516558123,"lang":"python3","time":"2 weeks, 5 days","timestamp":1625278085,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/516558123/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def hasCycle(self, head: ListNode) -> bool:\n        if head == None:\n            return False\n        fast = head\n        slow = head\n        \n        while(True):\n            if fast == None:\n                return False\n            elif fast == slow:\n                return True\n            fast = fast.next\n            if fast != None:\n                fast = fast.next\n            else:\n                return False\n            slow = slow.next","compare_result":"1101100111011101100","title_slug":"linked-list-cycle"}