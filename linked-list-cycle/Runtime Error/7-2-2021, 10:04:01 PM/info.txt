{"id":516557345,"lang":"python3","time":"2 weeks, 5 days","timestamp":1625277841,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/516557345/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def hasCycle(self, head: ListNode) -> bool:\n        if not head:\n            return False\n        fast = head.next\n        slow = head\n        \n        while(True):\n            if not fast:\n                return False\n            elif fast == slow:\n                return True\n            fast = fast.next\n            if fast.next != None:\n                fast = fast.next\n            else:\n                return False\n            slow = slow.next","compare_result":"1111110000000000000","title_slug":"linked-list-cycle"}